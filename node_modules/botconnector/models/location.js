/*
 * Code generated by Microsoft (R) AutoRest Code Generator 0.13.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the Location class.
 * @constructor
 * @member {number} [altitude] Altitude
 * 
 * @member {number} [latitude] Latitude for the user when the message was
 * created
 * 
 * @member {number} [longitude] Longitude for the user when the message was
 * created
 * 
 * @member {string} [name] Name for user location when the message was created
 * 
 */
function Location(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.altitude !== undefined) {
      this.altitude = parameters.altitude;
    }
    if (parameters.latitude !== undefined) {
      this.latitude = parameters.latitude;
    }
    if (parameters.longitude !== undefined) {
      this.longitude = parameters.longitude;
    }
    if (parameters.name !== undefined) {
      this.name = parameters.name;
    }
  }    
}


/**
 * Validate the payload against the Location schema
 *
 * @param {JSON} payload
 *
 */
Location.prototype.serialize = function () {
  var payload = {};
  if (this['altitude'] !== null && this['altitude'] !== undefined) {
    if (typeof this['altitude'] !== 'number') {
      throw new Error('this[\'altitude\'] must be of type number.');
    }
    payload['altitude'] = this['altitude'];
  }

  if (this['latitude'] !== null && this['latitude'] !== undefined) {
    if (typeof this['latitude'] !== 'number') {
      throw new Error('this[\'latitude\'] must be of type number.');
    }
    payload['latitude'] = this['latitude'];
  }

  if (this['longitude'] !== null && this['longitude'] !== undefined) {
    if (typeof this['longitude'] !== 'number') {
      throw new Error('this[\'longitude\'] must be of type number.');
    }
    payload['longitude'] = this['longitude'];
  }

  if (this['name'] !== null && this['name'] !== undefined) {
    if (typeof this['name'].valueOf() !== 'string') {
      throw new Error('this[\'name\'] must be of type string.');
    }
    payload['name'] = this['name'];
  }

  return payload;
};

/**
 * Deserialize the instance to Location schema
 *
 * @param {JSON} instance
 *
 */
Location.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['altitude'] !== undefined) {
      this['altitude'] = instance['altitude'];
    }

    if (instance['latitude'] !== undefined) {
      this['latitude'] = instance['latitude'];
    }

    if (instance['longitude'] !== undefined) {
      this['longitude'] = instance['longitude'];
    }

    if (instance['name'] !== undefined) {
      this['name'] = instance['name'];
    }
  }

  return this;
};

module.exports = Location;
