/*
 * Code generated by Microsoft (R) AutoRest Code Generator 0.13.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the ErrorModel class.
 * @constructor
 * @member {string} [code] Error code. Possible values for this property
 * include: 'MissingProperty', 'MalformedData', 'NotFound', 'ServiceError',
 * 'Internal', 'InvalidRange', 'NotSupported', 'NotAllowed', 'BadCertificate'.
 * 
 * @member {string} [message] Error message
 * 
 * @member {number} [statusCode] Status code
 * 
 */
function ErrorModel(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.code !== undefined) {
      this.code = parameters.code;
    }
    if (parameters.message !== undefined) {
      this.message = parameters.message;
    }
    if (parameters.statusCode !== undefined) {
      this.statusCode = parameters.statusCode;
    }
  }    
}


/**
 * Validate the payload against the ErrorModel schema
 *
 * @param {JSON} payload
 *
 */
ErrorModel.prototype.serialize = function () {
  var payload = {};
  if (this['code'] !== null && this['code'] !== undefined) {
    if (typeof this['code'].valueOf() !== 'string') {
      throw new Error('this[\'code\'] must be of type string.');
    }
    payload['code'] = this['code'];
  }

  if (this['message'] !== null && this['message'] !== undefined) {
    if (typeof this['message'].valueOf() !== 'string') {
      throw new Error('this[\'message\'] must be of type string.');
    }
    payload['message'] = this['message'];
  }

  if (this['statusCode'] !== null && this['statusCode'] !== undefined) {
    if (typeof this['statusCode'] !== 'number') {
      throw new Error('this[\'statusCode\'] must be of type number.');
    }
    payload['statusCode'] = this['statusCode'];
  }

  return payload;
};

/**
 * Deserialize the instance to ErrorModel schema
 *
 * @param {JSON} instance
 *
 */
ErrorModel.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['code'] !== undefined) {
      this['code'] = instance['code'];
    }

    if (instance['message'] !== undefined) {
      this['message'] = instance['message'];
    }

    if (instance['statusCode'] !== undefined) {
      this['statusCode'] = instance['statusCode'];
    }
  }

  return this;
};

module.exports = ErrorModel;
